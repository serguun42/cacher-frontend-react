openapi: 3.0.0

info:
  description: API used in new Cacher on React
  version: '1.0.0'
  contact:
    name: Cacher TJournal & DTF
    url: https://cacher.serguun42.ru
  license:
    name: 'BSL-1.0'
    url: 'https://github.com/serguun42/cacher-frontend-react'
  title: Cacher API
  x-logo:
    url: '/tj/img/tj/wide.png'

servers:
  - description: Cacher Production, API v1, site – TJournal
    url: https://cacher.serguun42.ru/api/v1/tj/
  - description: Cacher Production, API v1, site – DTF
    url: https://cacher.serguun42.ru/api/v1/dtf/

tags:
  - name: feed
    description: Start page contents
  - name: entry
    description: Get entry
  - name: entity
    description: User's or subsite's data
  - name: search
    description: Search related methods

paths:
  /feed/stats:
    get:
      description: Get statistics for start page's graph
      operationId: feedChart
      tags:
        - feed
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '403':
          description: Forbidden. Low account permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'
  /feed/last:
    get:
      description: Get last posts for start page
      operationId: feedLast
      tags:
        - feed
      parameters:
        - in: query
          name: skip
          schema:
            type: number
          required: false
          description: How many posts will be skipped
          example: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedPost'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '403':
          description: Forbidden. Low account permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'

  /entry:
    get:
      description: Get entry/post by its id
      operationId: entryById
      tags:
        - entry
      parameters:
        - in: query
          name: entryId
          schema:
            type: number
          required: true
          description: Post's id
          example: 355555
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '403':
          description: Forbidden. Low account permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                type: object
        '406':
          description: 'Not acceptable: pass ID parameter'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'

  /entity/names:
    get:
      description: Get user's or subsite's names and avatar
      operationId: entityNames
      tags:
        - entity
      parameters:
        - in: query
          name: entityId
          schema:
            type: number
          required: true
          description: User or subsite id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNamesAndAvatarsResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '403':
          description: Forbidden. Low account permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                type: object
        '406':
          description: 'Not acceptable: pass ID parameter'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'

  /search/entry:
    get:
      description: Search by post id, exactly
      operationId: searchByPostId
      tags:
        - search
      parameters:
        - in: query
          name: entryId
          schema:
            type: number
          required: true
          description: Post id to search by
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedPost'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '403':
          description: Forbidden. Low account permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                type: object
        '406':
          description: No entryId param or wrong format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'
  /search/entity:
    get:
      description: Search by entity id (from subsite's or author's urls)
      operationId: searchByEntityId
      tags:
        - search
      parameters:
        - in: query
          name: entityId
          schema:
            type: number
          required: true
          description: Entity id to search by
        - in: query
          name: skip
          schema:
            type: number
          required: false
          description: How many posts will be skipped
          example: 20
        - in: query
          name: date-start
          schema:
            type: string
            format: date
            example: '2022-05-10'
          required: false
          description: Limit by date, starting with this parameter (inclusively)
        - in: query
          name: date-end
          schema:
            type: string
            format: date
            example: '2022-05-15'
          required: false
          description: Limit by date, ending with this parameter (inclusively)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedPost'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '403':
          description: Forbidden. Low account permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: Posts not found
          content:
            application/json:
              schema:
                type: object
        '406':
          description: No entityId param or wrong format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'
  /search/url:
    get:
      description: Search by url to anything
      operationId: searchByUrl
      tags:
        - search
      parameters:
        - in: query
          name: url
          schema:
            type: number
          required: true
          description: url
        - in: query
          name: skip
          schema:
            type: number
          required: false
          description: How many posts will be skipped
          example: 20
        - in: query
          name: date-start
          schema:
            type: string
            format: date
            example: '2022-05-10'
          required: false
          description: Limit by date, starting with this parameter (inclusively)
        - in: query
          name: date-end
          schema:
            type: string
            format: date
            example: '2022-05-15'
          required: false
          description: Limit by date, ending with this parameter (inclusively)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedPost'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '403':
          description: Forbidden. Low account permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: Posts not found
          content:
            application/json:
              schema:
                type: object
        '406':
          description: No url param or wrong format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'
  /search/text:
    get:
      description: Search by text in title, intro, subsite's or author's names
      operationId: searchByText
      tags:
        - search
      parameters:
        - in: query
          name: text
          schema:
            type: string
          required: true
          description: Text to search by
        - in: query
          name: regex
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Search with regex, passed in param "text"
        - in: query
          name: case-sensetive
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Search case-sensetively (applicable both for plain text and regex)
        - in: query
          name: skip
          schema:
            type: number
          required: false
          description: How many posts will be skipped
          example: 20
        - in: query
          name: date-start
          schema:
            type: string
            format: date
            example: '2022-05-10'
          required: false
          description: Limit by date, starting with this parameter (inclusively)
        - in: query
          name: date-end
          schema:
            type: string
            format: date
            example: '2022-05-15'
          required: false
          description: Limit by date, ending with this parameter (inclusively)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedPost'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '403':
          description: Forbidden. Low account permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: Posts not found
          content:
            application/json:
              schema:
                type: object
        '406':
          description: >
            No text param or it's too short
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'

security:
  - cookieAuth: []

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session_id
      description: You can login to retrieve cookies on login-page

  schemas:
    APIError:
      type: object
      properties:
        error:
          type: boolean
          default: true
        code:
          type: number
        reason:
          type: string
      example:
        error: true
        code: 403
        reason: no_permission

    FeedPost:
      additionalProperties: false
      properties:
        author:
          additionalProperties: false
          properties:
            avatar_url:
              type: string
            id:
              type: number
            name:
              type: string
            url:
              type: string
          required:
            - id
            - name
            - url
            - avatar_url
          type: object
        date:
          type: number
        id:
          type: number
        intro:
          type: string
        subsite:
          additionalProperties: false
          properties:
            avatar_url:
              type: string
            id:
              type: number
            name:
              type: string
            url:
              type: string
          required:
            - id
            - name
            - url
            - avatar_url
          type: object
        title:
          type: string
        url:
          type: string
      required:
        - id
        - date
        - title
        - intro
        - url
        - author
        - subsite
      type: object

    StatsResponse:
      additionalProperties: false
      properties:
        countOfAllPosts:
          description: How many post in universe cacher has
          type: number
        sizeByDays:
          description: "For graph, does not include last day ('today')"
          items:
            additionalProperties: false
            properties:
              count:
                description: Posts published at that date
                type: number
              date:
                description: 'Date, YYYY-MM-DD format'
                type: string
            required:
              - date
              - count
            type: object
          type: array
        today:
          additionalProperties: false
          description: Special stats for today
          properties:
            blogPostsCount:
              description: Posts initially published to blogs today
              type: number
            count:
              description: Posts published today
              type: number
            countBySubsites:
              description: Posts today by subsites
              items:
                additionalProperties: false
                properties:
                  avatar_url:
                    description: Subsite avatar image url
                    type: string
                  count:
                    description: Posts published today in this subsite
                    type: number
                  id:
                    description: Subsite id
                    type: number
                  name:
                    description: Subsite name
                    type: string
                required:
                  - id
                  - name
                  - avatar_url
                  - count
                type: object
              type: array
            date:
              description: 'Date, YYYY-MM-DD format'
              type: string
            distinctAuthorsCount:
              description: Active posters count today
              type: number
          required:
            - date
            - count
            - blogPostsCount
            - distinctAuthorsCount
            - countBySubsites
          type: object
      required:
        - countOfAllPosts
        - today
        - sizeByDays
      type: object

    EntityNamesAndAvatarsResponse:
      additionalProperties: false
      properties:
        id:
          description: User or subsite id
          type: number
        last_avatar:
          description: Last avatar from Names Cacher (if present)
          type: string
        names:
          description: Previous names from Names Cacher. Can be empty
          items:
            type: string
          type: array
      required:
        - id
        - names
      type: object

    Comment:
      additionalProperties: false
      description: 'See types/comment.d.ts'
      properties: {}
      type: object

    LastComment:
      additionalProperties: false
      properties:
        comment_id:
          type: number
        creator:
          additionalProperties: false
          properties:
            id:
              type: number
            name:
              type: string
            url:
              type: string
          required:
            - id
            - name
            - url
          type: object
        date:
          format: date-time
          type: string
        media:
          items:
            additionalProperties: false
            properties:
              data:
                additionalProperties: false
                properties:
                  color:
                    type: string
                  description:
                    type: string
                  external_service:
                    items: {}
                    type: array
                  hash:
                    type: string
                  height:
                    type: number
                  image:
                    additionalProperties: false
                    properties:
                      data:
                        additionalProperties: false
                        properties:
                          color:
                            type: string
                          external_service:
                            items: {}
                            type: array
                          hash:
                            type: string
                          height:
                            type: number
                          size:
                            type: number
                          type:
                            type: string
                          uuid:
                            type: string
                          width:
                            type: number
                        required:
                          - uuid
                          - width
                          - height
                          - size
                          - type
                          - color
                          - hash
                          - external_service
                        type: object
                      type:
                        type: string
                    required:
                      - type
                      - data
                    type: object
                  size:
                    type: number
                  title:
                    type: string
                  type:
                    type: string
                  url:
                    type: string
                  uuid:
                    type: string
                  v:
                    type: number
                  width:
                    type: number
                required:
                  - uuid
                  - width
                  - height
                  - size
                  - type
                  - color
                  - hash
                  - external_service
                  - url
                  - title
                  - description
                  - image
                type: object
              type:
                type: string
            required:
              - type
              - data
            type: object
          type: array
        post_id:
          type: number
        reply_to_id:
          type: number
        text:
          type: string
      required:
        - date
        - creator
        - post_id
        - comment_id
        - reply_to_id
        - text
        - media
      type: object

    PostVersion:
      additionalProperties: false
      description: 'See types/post_version.d.ts'
      properties: {}
      type: object

    Entry:
      type: object
      additionalProperties: false
      properties:
        id:
          type: number
        initial:
          $ref: '#/components/schemas/PostVersion'
        tenminutes:
          $ref: '#/components/schemas/PostVersion'
        onehour:
          $ref: '#/components/schemas/PostVersion'
        comments:
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/Comment'
          type: object
        commentsVersion:
          type: string
          enum:
            - v2
          default: v2
        lastComments:
          type: array
          items:
            $ref: '#/components/schemas/LastComment'
      required:
        - id
        - initial
        - comments
        - commentsVersion
